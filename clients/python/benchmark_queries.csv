Query Number,Query Name,Description,SQL
1,Customer Analysis,"Simple aggregation on customers (count, avg, segmentation)","SELECT COUNT(*) as total_customers, COUNT(DISTINCT customer_id) as unique_customers, AVG(credit_score) as avg_credit_score, AVG(lifetime_value) as avg_lifetime_value, COUNT(CASE WHEN is_premium = true THEN 1 END) as premium_customers, COUNT(CASE WHEN is_premium = false THEN 1 END) as standard_customers FROM customers;"
2,Order Summary,"Aggregation on orders (sum, avg, min/max, group by status)","SELECT order_status, COUNT(*) as order_count, SUM(total_amount) as total_revenue, AVG(total_amount) as avg_order_value, MIN(order_date) as earliest_order, MAX(order_date) as latest_order FROM orders WHERE order_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY order_status ORDER BY total_revenue DESC;"
3,Lineitem Analysis,"Aggregation on lineitem (sum, avg, group by status, filter by date)","SELECT line_status, COUNT(*) as line_count, SUM(quantity) as total_quantity, SUM(extended_price) as total_extended_price, AVG(discount) as avg_discount, AVG(tax) as avg_tax FROM lineitem WHERE ship_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY line_status ORDER BY total_extended_price DESC;"
4,Customer-Order Join,"Join customers + orders, group by region, sum/avg revenue","SELECT c.region, COUNT(DISTINCT c.customer_id) as customer_count, COUNT(o.order_id) as total_orders, SUM(o.total_amount) as total_revenue, AVG(o.total_amount) as avg_order_value FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY c.region ORDER BY total_revenue DESC;"
5,Products Analysis,"Aggregation on products (count, unique, avg, min, max, active)","SELECT COUNT(*) as total_products, COUNT(DISTINCT category) as unique_categories, COUNT(DISTINCT brand) as unique_brands, AVG(price) as avg_price, MIN(price) as min_price, MAX(price) as max_price, COUNT(CASE WHEN is_active = true THEN 1 END) as active_products FROM products;"
6,Events Analysis,"Aggregation on events (count, unique, min/max timestamp)","SELECT COUNT(*) as total_events, COUNT(DISTINCT event_type) as unique_event_types, COUNT(DISTINCT device_type) as unique_device_types, MIN(event_timestamp) as earliest_event, MAX(event_timestamp) as latest_event FROM events WHERE event_timestamp >= TIMESTAMP '2023-01-01 00:00:00';"
7,Complex Multi-table Join,"Join customers + orders + lineitem, group by region, sum/avg, filter by date","SELECT c.region, COUNT(DISTINCT c.customer_id) as customer_count, COUNT(DISTINCT o.order_id) as order_count, COUNT(l.lineitem_id) as lineitem_count, SUM(l.extended_price) as total_revenue, AVG(l.quantity) as avg_quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN lineitem l ON o.order_id = l.order_id WHERE o.order_date >= TIMESTAMP '2023-01-01 00:00:00' AND l.ship_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY c.region ORDER BY total_revenue DESC;"
8,Revenue by Date Range,"Time-based aggregation on orders (group by year/month, sum/avg)","SELECT YEAR(o.order_date) as order_year, MONTH(o.order_date) as order_month, COUNT(DISTINCT o.order_id) as order_count, SUM(o.total_amount) as monthly_revenue, AVG(o.total_amount) as avg_order_value FROM orders o WHERE o.order_date >= TIMESTAMP '2023-01-01 00:00:00' AND o.order_date < TIMESTAMP '2024-01-01 00:00:00' GROUP BY YEAR(o.order_date), MONTH(o.order_date) ORDER BY order_year, order_month;"
9,Top Customers by Revenue,"Join customers + orders, group by customer, order by revenue, limit 20","SELECT c.customer_id, c.customer_name, c.region, COUNT(o.order_id) as order_count, SUM(o.total_amount) as total_revenue, AVG(o.total_amount) as avg_order_value FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY c.customer_id, c.customer_name, c.region ORDER BY total_revenue DESC LIMIT 20;"
10,Product Performance,"Join products + lineitem, group by brand/category, sum/avg, order by revenue, limit 15","SELECT p.brand, p.category, COUNT(DISTINCT l.order_id) as order_count, SUM(l.quantity) as total_quantity, SUM(l.extended_price) as total_revenue, AVG(l.discount) as avg_discount FROM products p JOIN lineitem l ON p.product_id = l.product_id WHERE l.ship_date >= TIMESTAMP '2023-01-01 00:00:00' GROUP BY p.brand, p.category ORDER BY total_revenue DESC LIMIT 15;" 